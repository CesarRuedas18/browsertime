/** Declaration file generated by dts-gen */

declare namespace context {
  /** The index of the run. */
  const index: number;

  /** The options object are the CLI parameters you supply when you run. See https://www.sitespeed.io/documentation/browsertime/configuration/ - It is generated dynamically and you can add your own fields. */
  const options: {};

  /** If you need to use Selenium code directly, you can do that by going to the Selenium documementation */
  const selenium: {
    /** The Selenium WebDriver public API object https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/index.html */
    webdriver: {};
    /** The instantiated version of the WebDriver https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_WebDriver.html */
    driver: {};
  };

  /** Holder for extra data. You probably not need to use this. */
  const taskData: {};

  /** Log to the log system. */
  namespace log {
    function critical(msg: string, ...args: any[]): void;

    function debug(msg: string, ...args: any[]): void;

    function error(msg: string, ...args: any[]): void;

    function info(msg: string, ...args: any[]): void;

    function trace(msg: string, ...args: any[]): void;

    function verbose(msg: string, ...args: any[]): void;

    function warn(msg: string, ...args: any[]): void;
  }

  /** The Storage manager has the ability to store data to disk. You probably not need to use this.  */
  namespace storageManager {
    function writeData(
      filename: string,
      data: any,
      subdir: string
    ): { error?: Promise<void> };
    function writeJson(
      filename: string,
      json: string,
      shouldGzip: boolean
    ): { error?: Promise<void> };
  }
}
